@model Trainee_Recruitment_Application.ViewModels.TraineeVM
@{
    /**/

    /**/

    ViewBag.Title = "Create";
}

<div class="row my-3">
    <div class="col-2">
        <a title="Back to List" href="@Url.Action("Index","Trainees")" class="btn btn-outline-success">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left-circle-fill" viewBox="0 0 16 16">
                <path d="M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z" />
            </svg>
        </a>
    </div>
</div>

<div class="row">
    <div class="col-12" id="updatemessage"></div>
</div>
@using (Html.BeginForm("Create", "Trainees", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <h3>Create New</h3>

    <div class="row mb-2">
        @Html.LabelFor(x => x.TraineeName, new { @class = "col-form-label col-2" })
        <div class="col-4">
            @Html.TextBoxFor(x => x.TraineeName, new { @class = "form-control" })
        </div>
        <div class="col-4">
            @Html.ValidationMessageFor(x => x.TraineeName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-2">
        @Html.LabelFor(x => x.Round, new { @class = "col-form-label col-2" })
        <div class="col-4">
            @Html.TextBoxFor(x => x.Round, new { @class = "form-control" })
        </div>
        <div class="col-4">
            @Html.ValidationMessageFor(x => x.Round, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-2">
        @Html.LabelFor(x => x.Picture, new { @class = "col-form-label col-2" })
        <div class="col-4">
            @Html.TextBoxFor(x => x.Picture, new { @class = "form-control", type = "file" })
        </div>
        <div class="col-4">
            @Html.ValidationMessageFor(x => x.Picture, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-2">
        @Html.LabelFor(x => x.BatchId, new { @class = "col-form-label col-2" })
        <div class="col-4">
            @Html.DropDownListFor(x => x.BatchId, ViewBag.SelectList as SelectList, "select", new { @class = "form-select" })
        </div>
        <div class="col-4">
            @Html.ValidationMessageFor(x => x.BatchId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-2">

        <div class="col-10 offset-2">
            <button type="submit" class="btn btn-success btn-sm">Insert</button>
        </div>

    </div>
}
@section scripts {

    <script src="~/Scripts/jquery-3.6.0.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script>
        $.validator.addMethod("round", function (value, element, params) {
            if (value) {
                if (value.ToString() == "R45") return true;
                else return false;
            }
        });
        $.validator.unobtrusive.adapters.addBool("round");
    </script>

}





